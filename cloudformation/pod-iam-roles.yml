---
AWSTemplateFormatVersion: '2010-09-09'
Description: roles to be used by resources in EKS cluster

Parameters:

  Environment:
    Type: String

  Project:
    Type: String

  OIDCProviderArn:
    Type: String

  EKSClusterName:
    Type: String

Resources:

  IngressControllerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - "acm:DescribeCertificate"
          - "acm:ListCertificates"
          - "acm:GetCertificate"
          Resource: "*"
        - Effect: Allow
          Action:
          - "ec2:AuthorizeSecurityGroupIngress"
          - "ec2:CreateSecurityGroup"
          - "ec2:CreateTags"
          - "ec2:DeleteTags"
          - "ec2:DeleteSecurityGroup"
          - "ec2:DescribeAccountAttributes"
          - "ec2:DescribeAddresses"
          - "ec2:DescribeInstances"
          - "ec2:DescribeInstanceStatus"
          - "ec2:DescribeInternetGateways"
          - "ec2:DescribeNetworkInterfaces"
          - "ec2:DescribeSecurityGroups"
          - "ec2:DescribeSubnets"
          - "ec2:DescribeTags"
          - "ec2:DescribeVpcs"
          - "ec2:ModifyInstanceAttribute"
          - "ec2:ModifyNetworkInterfaceAttribute"
          - "ec2:RevokeSecurityGroupIngress"
          Resource: "*"
        - Effect: Allow
          Action:
          - "elasticloadbalancing:AddListenerCertificates"
          - "elasticloadbalancing:AddTags"
          - "elasticloadbalancing:CreateListener"
          - "elasticloadbalancing:CreateLoadBalancer"
          - "elasticloadbalancing:CreateRule"
          - "elasticloadbalancing:CreateTargetGroup"
          - "elasticloadbalancing:DeleteListener"
          - "elasticloadbalancing:DeleteLoadBalancer"
          - "elasticloadbalancing:DeleteRule"
          - "elasticloadbalancing:DeleteTargetGroup"
          - "elasticloadbalancing:DeregisterTargets"
          - "elasticloadbalancing:DescribeListenerCertificates"
          - "elasticloadbalancing:DescribeListeners"
          - "elasticloadbalancing:DescribeLoadBalancers"
          - "elasticloadbalancing:DescribeLoadBalancerAttributes"
          - "elasticloadbalancing:DescribeRules"
          - "elasticloadbalancing:DescribeSSLPolicies"
          - "elasticloadbalancing:DescribeTags"
          - "elasticloadbalancing:DescribeTargetGroups"
          - "elasticloadbalancing:DescribeTargetGroupAttributes"
          - "elasticloadbalancing:DescribeTargetHealth"
          - "elasticloadbalancing:ModifyListener"
          - "elasticloadbalancing:ModifyLoadBalancerAttributes"
          - "elasticloadbalancing:ModifyRule"
          - "elasticloadbalancing:ModifyTargetGroup"
          - "elasticloadbalancing:ModifyTargetGroupAttributes"
          - "elasticloadbalancing:RegisterTargets"
          - "elasticloadbalancing:RemoveListenerCertificates"
          - "elasticloadbalancing:RemoveTags"
          - "elasticloadbalancing:SetIpAddressType"
          - "elasticloadbalancing:SetSecurityGroups"
          - "elasticloadbalancing:SetSubnets"
          - "elasticloadbalancing:SetWebACL"
          Resource: "*"
        - Effect: Allow
          Action:
          - "iam:CreateServiceLinkedRole"
          - "iam:GetServerCertificate"
          - "iam:ListServerCertificates"
          Resource: "*"
        - Effect: Allow
          Action:
          - "cognito-idp:DescribeUserPoolClient"
          Resource: "*"
        - Effect: Allow
          Action:
          - "waf-regional:GetWebACLForResource"
          - "waf-regional:GetWebACL"
          - "waf-regional:AssociateWebACL"
          - "waf-regional:DisassociateWebACL"
          Resource: "*"
        - Effect: Allow
          Action:
          - "tag:GetResources"
          - "tag:TagResources"
          Resource: "*"
        - Effect: Allow
          Action:
          - "waf:GetWebACL"
          Resource: "*"

  EKSPodIngressControllerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Project}-${Environment}-${EKSClusterName}-EKSalbIngressControllerIamRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated:
              !Ref OIDCProviderArn
          Action:
          - sts:AssumeRoleWithWebIdentity
      Path: "/"
      ManagedPolicyArns:
      - !Ref IngressControllerManagedPolicy
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  IngressControllerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - "route53:ChangeResourceRecordSets"
          Resource: "arn:aws:route53:::hostedzone/*"
        - Effect: Allow
          Action:
          - "route53:ListHostedZones",
          - "route53:ListResourceRecordSets"
          Resource: "*"

  EKSalbIngressExternalDNSIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Project}-${Environment}-${EKSClusterName}-EKSalbIngressExternalDNSIamRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated:
              !Ref OIDCProviderArn
          Action:
          - sts:AssumeRoleWithWebIdentity
      Path: "/"
      ManagedPolicyArns:
      - !Ref IngressControllerManagedPolicy
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  EKSPodS3ReadOnlyAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Project}-${Environment}-${EKSClusterName}-s3ReadOnly"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated:
              !Ref OIDCProviderArn
          Action:
          - sts:AssumeRoleWithWebIdentity
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  EKSPodS3ReadWriteAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Project}-${Environment}-${EKSClusterName}-s3ReadWrite"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated:
              !Ref OIDCProviderArn
          Action:
          - sts:AssumeRoleWithWebIdentity
      Path: "/"
      ManagedPolicyArns:
      - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  ClusterAutoscalerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        -
          Effect: Allow
          Action:
          - "autoscaling:DescribeAutoScalingGroups"
          - "autoscaling:DescribeAutoScalingInstances"
          - "autoscaling:DescribeLaunchConfigurations"
          - "autoscaling:DescribeTags"
          - "autoscaling:SetDesiredCapacity"
          - "autoscaling:TerminateInstanceInAutoScalingGroup"
          - "ec2:DescribeLaunchTemplateVersions"
          Resource:
          - '*'

  ClusterAutoscalerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Project}-${Environment}-${EKSClusterName}-clusterAutoscaler"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated:
              !Ref OIDCProviderArn
          Action:
          - sts:AssumeRoleWithWebIdentity
      Path: "/"
      ManagedPolicyArns:
      - !Ref ClusterAutoscalerManagedPolicy
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project

  CloudwatchMetricAdapterManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        -
          Effect: Allow
          Action:
          - "cloudwatch:GetMetricData"
          - "cloudwatch:GetMetricStatistics"
          - "cloudwatch:ListMetrics"
          Resource:
          - '*'

  CloudwatchMetricAdapterRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${Project}-${Environment}-${EKSClusterName}-CloudwatchMetricAdapter"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Federated:
              !Ref OIDCProviderArn
          Action:
          - sts:AssumeRoleWithWebIdentity
      Path: "/"
      ManagedPolicyArns:
      - !Ref CloudwatchMetricAdapterManagedPolicy
      Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Project
        Value: !Ref Project