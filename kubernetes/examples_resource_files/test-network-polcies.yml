---
kind: NetworkPolicy
apiVersion: networking.k8s.io/v1
metadata:
  name: default-deny
spec:
  podSelector:
    matchLabels: {}
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nginx-networkpolicy-deployment-np-ingress
spec:
  podSelector:
    matchLabels:
      app: nginx-networkpolicy-deployment
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: client-allow
    ports:
    - protocol: TCP
      port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-networkpolicy-deployment
spec:
  selector:
    matchLabels:
      app: nginx-networkpolicy-deployment
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx-networkpolicy-deployment
    spec:
      containers:
      - name: nginx
        image: nginx:1.17.8
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-networkpolicy-service
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: nginx-networkpolicy-deployment
---
apiVersion: v1
kind: Pod
metadata:
  name: client-allow
  labels:
    app: client-allow
spec:
  restartPolicy: Never
  containers:
  - name: client-allow
    image: amazonlinux
    command: ['curl', '-m', '10', 'nginx-networkpolicy-service']
# kubectl logs client-allow: ok
---
apiVersion: v1
kind: Pod
metadata:
  name: client-deny
  labels:
    app: client-deny
spec:
  restartPolicy: Never
  containers:
  - name: client-deny
    image: amazonlinux
    command: ['curl', '-m', '10', 'nginx-networkpolicy-service']
# kubectl logs client-deny: Connection timed out after 10001 milliseconds
