---
creation_rules:
  # Encrypt with AWS KMS
  - kms: 'arn:aws:kms:eu-west-1:00000000000:key/2c2c7cbd-7b9a-4d02-9322-xxxxxxx'


# unfortunately profiles are not well supported by the go aws sdk (it requires a profile that has access key
# and secret key defined), that's why we cannot use our current setup,currently you can use this bash function
# to create the default credentials from profile and call it before helm (e.g. setup_aws_credentials company-test):

# function setup_aws_credentials() {
#     profile_name=$1
#     role_arn=$(aws configure get role_arn --profile $profile_name)
#     region=$(aws configure get region --profile $profile_name)
#     mfa_serial=$(aws configure get mfa_serial --profile $profile_name)
#     local stscredentials
#     stscredentials=$(aws sts assume-role \
#         --profile $profile_name \
#         --role-arn "${role_arn}" \
#         --role-session-name something \
#         --query '[Credentials.SessionToken,Credentials.AccessKeyId,Credentials.SecretAccessKey]' \
#         --output text)
#     export AWS_ACCESS_KEY_ID=$(echo "${stscredentials}" | awk '{print $2}')
#     export AWS_SECRET_ACCESS_KEY=$(echo "${stscredentials}" | awk '{print $3}')
#     export AWS_SESSION_TOKEN=$(echo "${stscredentials}" | awk '{print $1}')
#     export AWS_SECURITY_TOKEN=$(echo "${stscredentials}" | awk '{print $1}')
#     export AWS_PROFILE=$1
#     if [ $region ]
#     then
#         export AWS_DEFAULT_REGION=$region
#     fi
# }